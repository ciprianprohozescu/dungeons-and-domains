/*
 * generated by Xtext 2.29.0
 */
grammar InternalPOGL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.dungeonsanddomains.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.dungeonsanddomains.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.dungeonsanddomains.services.POGLGrammarAccess;

}
@parser::members {
	private POGLGrammarAccess grammarAccess;

	public void setGrammarAccess(POGLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getDefinitionsAssignment()); }
		(rule__Program__DefinitionsAssignment)*
		{ after(grammarAccess.getProgramAccess().getDefinitionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefinitionAssignment()); }
		(rule__Definition__DefinitionAssignment)
		{ after(grammarAccess.getDefinitionAccess().getDefinitionAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateDef
entryRuleStateDef
:
{ before(grammarAccess.getStateDefRule()); }
	 ruleStateDef
{ after(grammarAccess.getStateDefRule()); } 
	 EOF 
;

// Rule StateDef
ruleStateDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateDefAccess().getGroup()); }
		(rule__StateDef__Group__0)
		{ after(grammarAccess.getStateDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemDef
entryRuleItemDef
:
{ before(grammarAccess.getItemDefRule()); }
	 ruleItemDef
{ after(grammarAccess.getItemDefRule()); } 
	 EOF 
;

// Rule ItemDef
ruleItemDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemDefAccess().getGroup()); }
		(rule__ItemDef__Group__0)
		{ after(grammarAccess.getItemDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleActionDef
entryRuleActionDef
:
{ before(grammarAccess.getActionDefRule()); }
	 ruleActionDef
{ after(grammarAccess.getActionDefRule()); } 
	 EOF 
;

// Rule ActionDef
ruleActionDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionDefAccess().getGroup()); }
		(rule__ActionDef__Group__0)
		{ after(grammarAccess.getActionDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getTypeAssignment()); }
		(rule__Instruction__TypeAssignment)
		{ after(grammarAccess.getInstructionAccess().getTypeAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleItemManipulation
entryRuleItemManipulation
:
{ before(grammarAccess.getItemManipulationRule()); }
	 ruleItemManipulation
{ after(grammarAccess.getItemManipulationRule()); } 
	 EOF 
;

// Rule ItemManipulation
ruleItemManipulation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getItemManipulationAccess().getGroup()); }
		(rule__ItemManipulation__Group__0)
		{ after(grammarAccess.getItemManipulationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck
entryRuleCheck
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckAccess().getGroup()); }
		(rule__Check__Group__0)
		{ after(grammarAccess.getCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComparisonOperator
entryRuleComparisonOperator
:
{ before(grammarAccess.getComparisonOperatorRule()); }
	 ruleComparisonOperator
{ after(grammarAccess.getComparisonOperatorRule()); } 
	 EOF 
;

// Rule ComparisonOperator
ruleComparisonOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
		(rule__ComparisonOperator__Alternatives)
		{ after(grammarAccess.getComparisonOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMessageDisplay
entryRuleMessageDisplay
:
{ before(grammarAccess.getMessageDisplayRule()); }
	 ruleMessageDisplay
{ after(grammarAccess.getMessageDisplayRule()); } 
	 EOF 
;

// Rule MessageDisplay
ruleMessageDisplay 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMessageDisplayAccess().getGroup()); }
		(rule__MessageDisplay__Group__0)
		{ after(grammarAccess.getMessageDisplayAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStateTransition
entryRuleStateTransition
:
{ before(grammarAccess.getStateTransitionRule()); }
	 ruleStateTransition
{ after(grammarAccess.getStateTransitionRule()); } 
	 EOF 
;

// Rule StateTransition
ruleStateTransition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStateTransitionAccess().getGroup()); }
		(rule__StateTransition__Group__0)
		{ after(grammarAccess.getStateTransitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefinitionAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefinitionStateDefParserRuleCall_0_0()); }
		ruleStateDef
		{ after(grammarAccess.getDefinitionAccess().getDefinitionStateDefParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDefinitionItemDefParserRuleCall_0_1()); }
		ruleItemDef
		{ after(grammarAccess.getDefinitionAccess().getDefinitionItemDefParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getDefinitionActionDefParserRuleCall_0_2()); }
		ruleActionDef
		{ after(grammarAccess.getDefinitionAccess().getDefinitionActionDefParserRuleCall_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__OptionalStateModifierAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefAccess().getOptionalStateModifierStartKeyword_2_0_0()); }
		'start'
		{ after(grammarAccess.getStateDefAccess().getOptionalStateModifierStartKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getStateDefAccess().getOptionalStateModifierFinalKeyword_2_0_1()); }
		'final'
		{ after(grammarAccess.getStateDefAccess().getOptionalStateModifierFinalKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__TypeAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getTypeItemManipulationParserRuleCall_0_0()); }
		ruleItemManipulation
		{ after(grammarAccess.getInstructionAccess().getTypeItemManipulationParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTypeCheckParserRuleCall_0_1()); }
		ruleCheck
		{ after(grammarAccess.getInstructionAccess().getTypeCheckParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTypeMessageDisplayParserRuleCall_0_2()); }
		ruleMessageDisplay
		{ after(grammarAccess.getInstructionAccess().getTypeMessageDisplayParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getTypeStateTransitionParserRuleCall_0_3()); }
		ruleStateTransition
		{ after(grammarAccess.getInstructionAccess().getTypeStateTransitionParserRuleCall_0_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemManipulationAccess().getAddKeyword_2_0()); }
		'add'
		{ after(grammarAccess.getItemManipulationAccess().getAddKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getItemManipulationAccess().getRemoveKeyword_2_1()); }
		'remove'
		{ after(grammarAccess.getItemManipulationAccess().getRemoveKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComparisonOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignKeyword_0()); }
		'>'
		{ after(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLessThanSignKeyword_1()); }
		'<'
		{ after(grammarAccess.getComparisonOperatorAccess().getLessThanSignKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_2()); }
		'='
		{ after(grammarAccess.getComparisonOperatorAccess().getEqualsSignKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
		'!='
		{ after(grammarAccess.getComparisonOperatorAccess().getExclamationMarkEqualsSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
		'>='
		{ after(grammarAccess.getComparisonOperatorAccess().getGreaterThanSignEqualsSignKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
		'<='
		{ after(grammarAccess.getComparisonOperatorAccess().getLessThanSignEqualsSignKeyword_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDef__Group__0__Impl
	rule__StateDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefAccess().getStateKeyword_0()); }
	'state'
	{ after(grammarAccess.getStateDefAccess().getStateKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDef__Group__1__Impl
	rule__StateDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefAccess().getNameAssignment_1()); }
	(rule__StateDef__NameAssignment_1)
	{ after(grammarAccess.getStateDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDef__Group__2__Impl
	rule__StateDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefAccess().getOptionalStateModifierAssignment_2()); }
	(rule__StateDef__OptionalStateModifierAssignment_2)?
	{ after(grammarAccess.getStateDefAccess().getOptionalStateModifierAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDef__Group__3__Impl
	rule__StateDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefAccess().getMessageAssignment_3()); }
	(rule__StateDef__MessageAssignment_3)
	{ after(grammarAccess.getStateDefAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateDefAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getStateDefAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDef__Group__0__Impl
	rule__ItemDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDefAccess().getItemKeyword_0()); }
	'item'
	{ after(grammarAccess.getItemDefAccess().getItemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDef__Group__1__Impl
	rule__ItemDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDefAccess().getNameAssignment_1()); }
	(rule__ItemDef__NameAssignment_1)
	{ after(grammarAccess.getItemDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDef__Group__2__Impl
	rule__ItemDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDefAccess().getSetKeyword_2()); }
	'set'
	{ after(grammarAccess.getItemDefAccess().getSetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDef__Group__3__Impl
	rule__ItemDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDefAccess().getValueAssignment_3()); }
	(rule__ItemDef__ValueAssignment_3)
	{ after(grammarAccess.getItemDefAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemDef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemDefAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getItemDefAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ActionDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__0__Impl
	rule__ActionDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getActionKeyword_0()); }
	'action'
	{ after(grammarAccess.getActionDefAccess().getActionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__1__Impl
	rule__ActionDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getInKeyword_1()); }
	'in'
	{ after(grammarAccess.getActionDefAccess().getInKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__2__Impl
	rule__ActionDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getStateAssignment_2()); }
	(rule__ActionDef__StateAssignment_2)
	{ after(grammarAccess.getActionDefAccess().getStateAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__3__Impl
	rule__ActionDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getMessageAssignment_3()); }
	(rule__ActionDef__MessageAssignment_3)
	{ after(grammarAccess.getActionDefAccess().getMessageAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__4__Impl
	rule__ActionDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getDoKeyword_4()); }
	'do'
	{ after(grammarAccess.getActionDefAccess().getDoKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__5__Impl
	rule__ActionDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getInstructionsAssignment_5()); }
	(rule__ActionDef__InstructionsAssignment_5)*
	{ after(grammarAccess.getActionDefAccess().getInstructionsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ActionDef__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getActionDefAccess().getEndKeyword_6()); }
	'end'
	{ after(grammarAccess.getActionDefAccess().getEndKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ItemManipulation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemManipulation__Group__0__Impl
	rule__ItemManipulation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemManipulationAccess().getItemKeyword_0()); }
	'item'
	{ after(grammarAccess.getItemManipulationAccess().getItemKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemManipulation__Group__1__Impl
	rule__ItemManipulation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemManipulationAccess().getItemAssignment_1()); }
	(rule__ItemManipulation__ItemAssignment_1)
	{ after(grammarAccess.getItemManipulationAccess().getItemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemManipulation__Group__2__Impl
	rule__ItemManipulation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemManipulationAccess().getAlternatives_2()); }
	(rule__ItemManipulation__Alternatives_2)
	{ after(grammarAccess.getItemManipulationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemManipulation__Group__3__Impl
	rule__ItemManipulation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemManipulationAccess().getValueAssignment_3()); }
	(rule__ItemManipulation__ValueAssignment_3)
	{ after(grammarAccess.getItemManipulationAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ItemManipulation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getItemManipulationAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getItemManipulationAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
	'check'
	{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__1__Impl
	rule__Check__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getItemAssignment_1()); }
	(rule__Check__ItemAssignment_1)
	{ after(grammarAccess.getCheckAccess().getItemAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__2__Impl
	rule__Check__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getComparisonOperatorAssignment_2()); }
	(rule__Check__ComparisonOperatorAssignment_2)
	{ after(grammarAccess.getCheckAccess().getComparisonOperatorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__3__Impl
	rule__Check__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getValueAssignment_3()); }
	(rule__Check__ValueAssignment_3)
	{ after(grammarAccess.getCheckAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__4__Impl
	rule__Check__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getThenKeyword_4()); }
	'then'
	{ after(grammarAccess.getCheckAccess().getThenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__5__Impl
	rule__Check__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getInstructionsIfTrueAssignment_5()); }
	(rule__Check__InstructionsIfTrueAssignment_5)*
	{ after(grammarAccess.getCheckAccess().getInstructionsIfTrueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__6__Impl
	rule__Check__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getGroup_6()); }
	(rule__Check__Group_6__0)?
	{ after(grammarAccess.getCheckAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getEndcheckKeyword_7()); }
	'endcheck'
	{ after(grammarAccess.getCheckAccess().getEndcheckKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group_6__0__Impl
	rule__Check__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getElseKeyword_6_0()); }
	'else'
	{ after(grammarAccess.getCheckAccess().getElseKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getInstructionsIfFalseAssignment_6_1()); }
	(rule__Check__InstructionsIfFalseAssignment_6_1)*
	{ after(grammarAccess.getCheckAccess().getInstructionsIfFalseAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MessageDisplay__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDisplay__Group__0__Impl
	rule__MessageDisplay__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDisplayAccess().getShowKeyword_0()); }
	'show'
	{ after(grammarAccess.getMessageDisplayAccess().getShowKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDisplay__Group__1__Impl
	rule__MessageDisplay__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDisplayAccess().getMessageAssignment_1()); }
	(rule__MessageDisplay__MessageAssignment_1)
	{ after(grammarAccess.getMessageDisplayAccess().getMessageAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MessageDisplay__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMessageDisplayAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getMessageDisplayAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StateTransition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateTransition__Group__0__Impl
	rule__StateTransition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTransitionAccess().getGotoKeyword_0()); }
	'goto'
	{ after(grammarAccess.getStateTransitionAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateTransition__Group__1__Impl
	rule__StateTransition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTransitionAccess().getStateAssignment_1()); }
	(rule__StateTransition__StateAssignment_1)
	{ after(grammarAccess.getStateTransitionAccess().getStateAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StateTransition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStateTransitionAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getStateTransitionAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__DefinitionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getDefinitionsDefinitionParserRuleCall_0()); }
		ruleDefinition
		{ after(grammarAccess.getProgramAccess().getDefinitionsDefinitionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__DefinitionAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getDefinitionAlternatives_0()); }
		(rule__Definition__DefinitionAlternatives_0)
		{ after(grammarAccess.getDefinitionAccess().getDefinitionAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getStateDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__OptionalStateModifierAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefAccess().getOptionalStateModifierAlternatives_2_0()); }
		(rule__StateDef__OptionalStateModifierAlternatives_2_0)
		{ after(grammarAccess.getStateDefAccess().getOptionalStateModifierAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateDef__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateDefAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getStateDefAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getItemDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemDef__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemDefAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getItemDefAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__StateAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDefAccess().getStateStateDefCrossReference_2_0()); }
		(
			{ before(grammarAccess.getActionDefAccess().getStateStateDefIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getActionDefAccess().getStateStateDefIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getActionDefAccess().getStateStateDefCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__MessageAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDefAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getActionDefAccess().getMessageSTRINGTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ActionDef__InstructionsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionDefAccess().getInstructionsInstructionParserRuleCall_5_0()); }
		ruleInstruction
		{ after(grammarAccess.getActionDefAccess().getInstructionsInstructionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__TypeAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getTypeAlternatives_0()); }
		(rule__Instruction__TypeAlternatives_0)
		{ after(grammarAccess.getInstructionAccess().getTypeAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__ItemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemManipulationAccess().getItemItemDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getItemManipulationAccess().getItemItemDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getItemManipulationAccess().getItemItemDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getItemManipulationAccess().getItemItemDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ItemManipulation__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getItemManipulationAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getItemManipulationAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ItemAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getItemItemDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getCheckAccess().getItemItemDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCheckAccess().getItemItemDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getCheckAccess().getItemItemDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ComparisonOperatorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getComparisonOperatorComparisonOperatorParserRuleCall_2_0()); }
		ruleComparisonOperator
		{ after(grammarAccess.getCheckAccess().getComparisonOperatorComparisonOperatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getCheckAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__InstructionsIfTrueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getInstructionsIfTrueInstructionParserRuleCall_5_0()); }
		ruleInstruction
		{ after(grammarAccess.getCheckAccess().getInstructionsIfTrueInstructionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__InstructionsIfFalseAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getInstructionsIfFalseInstructionParserRuleCall_6_1_0()); }
		ruleInstruction
		{ after(grammarAccess.getCheckAccess().getInstructionsIfFalseInstructionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageDisplay__MessageAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMessageDisplayAccess().getMessageSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getMessageDisplayAccess().getMessageSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StateTransition__StateAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStateTransitionAccess().getStateStateDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getStateTransitionAccess().getStateStateDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getStateTransitionAccess().getStateStateDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getStateTransitionAccess().getStateStateDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
