grammar org.dnd.POGL with org.eclipse.xtext.common.Terminals

generate pOGL "http://www.dnd.org/POGL"

Program:
    (modules+=Module)*
;

Module:
	module=(Adventure | Import)
;

Adventure:
	'adventure' name=ID 'begin' (definitions+=Definition)* 'end'
;

Definition:
    State | Item | Action
;

State:
    'state' name=ID optionalStateModifier=('start' | 'final')? description=STRING ';'
;

Item:
    'item' name=ID ('set' value=INT)? ';'
;

FullyQualifiedState:
	(adventure=[Adventure] '.')? state=[State]
; 

FullyQualifiedItem:
	(adventure=[Adventure] '.')? item=[Item]
; 

Action:
    'action' name=ID visibility=('hidden')? 'in' state=FullyQualifiedState description=STRING 'do' (instructions+=Instruction)* 'endaction'
;

Instruction:
    ItemManipulation | Check | MessageDisplay | ActionVisibilityChange | StateTransition
;

ItemManipulation:
    item=FullyQualifiedItem operator=('add' | 'remove' | 'set') value=INT ';'
;

Check:
    'check' expression=Expression ('and' andExpressions+=Expression)*
    'then' (instructionsIfTrue+=Instruction)+ 
    ('else' (instructionsIfFalse+=Instruction)*)?
    'endcheck'
;

Expression:
	left=Term operator=ComparisonOperator right=Term
;

Term:
	termInt=INT | termItem=FullyQualifiedItem
;

ComparisonOperator:
    '>' | '<' | '=' | '!=' | '>=' | '<='
;

MessageDisplay:
    'show' message=STRING ';'
;

ActionVisibilityChange:
	verb=('reveal' | 'hide') action=[Action] ';'
;

StateTransition:
    'goto' state=FullyQualifiedState ';'
;

Import:
	'import' importURI=STRING ';'
;
